function Heredity_M300(Ind_No)
global POP_STRUC
global ORG_STRUC
global OFF_STRUC
info_parents = struct('parent', {}, 'fracFrac', {},'dimension', {},'offset', {}, 'enthalpy', {});
searching = 1;
count = 1;
while searching
count = count + 1;
if count > 50
%disp('failed to do mutation in 50 attempts, switch to Random');
USPEXmessage(508,'',0);
Random_M300(Ind_No);
break;
end
same = 1;
while same
par_one = find (ORG_STRUC.tournament>RandInt(1,1,[0,max(ORG_STRUC.tournament)-1]));
par_two = find (ORG_STRUC.tournament>RandInt(1,1,[0,max(ORG_STRUC.tournament)-1]));
ind1 = POP_STRUC.ranking(par_one(end));
ind2 = POP_STRUC.ranking(par_two(end));
if par_one(end) ~= par_two(end)
same = 0;
end
end
goodHeritage = 0;
goodLattice = 0;
securityCheck = 0;
while goodHeritage + goodLattice ~=2
securityCheck = securityCheck+1;
offset=[];
[GB_numIons, GB_candidate, GB_lat, fracFrac, dimension,offset] = heredity_GB(ind1,ind2);
bulk_lat    =ORG_STRUC.bulk_lat;
bulk_pos    =ORG_STRUC.bulk_pos;
bulk_atyp   =ORG_STRUC.bulk_atyp';
bulk_numIons=ORG_STRUC.bulk_ntyp;
GB_numIons  =ORG_STRUC.numIons;
numIons = GB_numIons + bulk_numIons;
item = 0;
for i = 1:length(GB_numIons)
GB_atyp(1,item+1:item+GB_numIons(i))=ORG_STRUC.atomType(i);
item = item + GB_numIons(i);
end
[lat,candidate, typesAList, chanAList] = makeGB(numIons, GB_lat, GB_candidate, GB_atyp, bulk_lat, bulk_pos, bulk_atyp, ORG_STRUC.vacuumSize(1));
goodHeritage = distanceCheck(candidate, lat, numIons, ORG_STRUC.minDistMatrice);
goodLattice=1;
if goodHeritage + goodLattice  == 2
OFF_STRUC.POPULATION(Ind_No).Bulk_LATTICE=bulk_lat;
OFF_STRUC.POPULATION(Ind_No).Bulk_COORDINATES=bulk_pos;
OFF_STRUC.POPULATION(Ind_No).Bulk_typesAList=bulk_atyp;
OFF_STRUC.POPULATION(Ind_No).Bulk_numIons=bulk_numIons;
OFF_STRUC.POPULATION(Ind_No).numIons = numIons;
OFF_STRUC.POPULATION(Ind_No).LATTICE = lat;
OFF_STRUC.POPULATION(Ind_No).COORDINATES = candidate;
OFF_STRUC.POPULATION(Ind_No).typesAList = typesAList;
OFF_STRUC.POPULATION(Ind_No).chanAList=chanAList;
OFF_STRUC.POPULATION(Ind_No).GB_COORDINATES = GB_candidate;
OFF_STRUC.POPULATION(Ind_No).GB_LATTICE = GB_lat;
OFF_STRUC.POPULATION(Ind_No).GB_numIons = GB_numIons;
OFF_STRUC.POPULATION(Ind_No).GB_typesAList = GB_atyp;
parents = [ind1 ind2];
fracFrac = [0 fracFrac 1];
enthalpy = 0;
ID = [];
for i = 2:length(fracFrac)
ID= [ID POP_STRUC.POPULATION(parents(i-1)).Number];
E = POP_STRUC.POPULATION(parents(i-1)).Enthalpies(end);
ratio=fracFrac(i)-fracFrac(i-1);
enthalpy = enthalpy+E*ratio;
end
info_parents(1).parent = num2str(ID);
info_parents.enthalpy  = enthalpy(end);
info_parents.enthalpy  = info_parents.enthalpy/sum(numIons);
info_parents.fracFrac  = fracFrac;
info_parents.dimension = dimension;
info_parents.offset    = offset;
OFF_STRUC.POPULATION(Ind_No).Parents = info_parents;
OFF_STRUC.POPULATION(Ind_No).howCome = 'Heredity';
disp(['Structure ' num2str(Ind_No) '  generated by heredity']);
searching=0;
end
if securityCheck>20
break
end
end
end
