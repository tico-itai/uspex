function Mutation_200(Ind_No)
global POP_STRUC
global ORG_STRUC
global OFF_STRUC
goodAtomMutant = 0;
goodMutLattice = 0;
while goodAtomMutant + goodMutLattice ~= 2
toMutate = find(ORG_STRUC.tournament>RandInt(1,1,[0,max(ORG_STRUC.tournament)-1]));
ind = POP_STRUC.ranking(toMutate(end));
[MUT_COORD]= move_all_atom_Mutation(POP_STRUC.POPULATION(ind).Surface_COORDINATES,POP_STRUC.POPULATION(ind).Surface_numIons,POP_STRUC.POPULATION(ind).Surface_LATTICE, POP_STRUC.POPULATION(ind).Surface_order, 0.5);
N_Moved = sum(POP_STRUC.POPULATION(ind).Surface_numIons);
surnumIons = POP_STRUC.POPULATION(ind).Surface_numIons;
bigcell=POP_STRUC.POPULATION(ind).cell;
bigcell(3)=1;
[bulklat,coordinates,atyp,ntyp]=supercell(ORG_STRUC.bulk_lat,ORG_STRUC.bulk_pos, ORG_STRUC.bulk_atyp , ORG_STRUC.bulk_ntyp, bigcell);
[lat,candidate,numIons,typesAList,chanAList] = makeSurface(POP_STRUC.POPULATION(ind).Surface_LATTICE,MUT_COORD,surnumIons,bulklat,coordinates,atyp,ntyp,ORG_STRUC.vacuumSize(1));
[coor, composition] = getSurface(candidate, numIons, lat);
goodAtomMutant = distanceCheck (coor,lat,composition, ORG_STRUC.minDistMatrice);   
goodMutLattice = 1; 
if goodAtomMutant + goodMutLattice == 2
OFF_STRUC.POPULATION(Ind_No).Bulk_LATTICE=bulklat;
OFF_STRUC.POPULATION(Ind_No).Bulk_COORDINATES=coordinates;
OFF_STRUC.POPULATION(Ind_No).Bulk_typesAList=atyp;
OFF_STRUC.POPULATION(Ind_No).Bulk_numIons=ntyp;
OFF_STRUC.POPULATION(Ind_No).numIons = numIons;
OFF_STRUC.POPULATION(Ind_No).LATTICE = lat;
OFF_STRUC.POPULATION(Ind_No).COORDINATES = candidate;
OFF_STRUC.POPULATION(Ind_No).typesAList = typesAList;
OFF_STRUC.POPULATION(Ind_No).chanAList=chanAList;
OFF_STRUC.POPULATION(Ind_No).Surface_COORDINATES = MUT_COORD;
OFF_STRUC.POPULATION(Ind_No).Surface_LATTICE = POP_STRUC.POPULATION(ind).Surface_LATTICE;
OFF_STRUC.POPULATION(Ind_No).cell= POP_STRUC.POPULATION(ind).cell;
info_parents = struct('parent', {},'N_Moved', {}, 'enthalpy', {});
info_parents(1).parent = num2str(POP_STRUC.POPULATION(ind).Number);
info_parents.N_Moved = N_Moved;
info_parents.enthalpy = POP_STRUC.POPULATION(ind).Enthalpies(end)/sum(numIons);
OFF_STRUC.POPULATION(Ind_No).Parents = info_parents;
OFF_STRUC.POPULATION(Ind_No).Surface_numIons = POP_STRUC.POPULATION(ind).Surface_numIons;
OFF_STRUC.POPULATION(Ind_No).howCome = 'CoorMutate';
disp(['Structure ' num2str(Ind_No) '  generated by mutation']);
end
end
